/*
The first part is the header (eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9). The header specifies information like the algorithm used to generate the signature (the third part). This part is pretty standard and is the same for any JWT using the same algorithm.
The second part is the payload (eyJ1c2VybmFtZSI6InVzZXIxIiwiZXhwIjoxNTQ3OTc0MDgyfQ), which contains application specific information (in our case, this is the username), along with information about the expiry and validity of the token.
The third part is the signature (2Ye5_w1z3zpD4dSGdRp3s98ZipCNQqmsHRB9vioOx54). It is generated by combining and hashing the first two parts along with a secret key.
*/
const jwt = require("jsonwebtoken");
const myFunction = async () => {
  /* 3 arg to gen token - the data u 1 2 generate ie id, secret key, expiry */
  const token = jwt.sign({ _id: "qwerty" }, "helloworld", {
    expiresIn: "1 day",
  });
  console.log(token);

  /* this is how u verify the token */
  const data = jwt.verify(token, "helloworld");
  console.log(data);
};
myFunction();
